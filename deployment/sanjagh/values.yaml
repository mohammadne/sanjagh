operator-helm:
  fullnameOverride: sanjagh

  image:
    registry: ghcr.io
    repository: mohammadne/sanjagh
    pullPolicy: Always
    tag: "v0.1.0"

  manager:
    rules:
      - apiGroups: ["apps"]
        resources: ["deployments"]
        verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
      - apiGroups: ["apps.mohammadne.me"]
        resources: ["executers"]
        verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
      - apiGroups: ["apps.mohammadne.me"]
        resources: ["executers/status"]
        verbs: ["get", "update", "patch"]
      - apiGroups: ["apps.mohammadne.me"]
        resources: ["executers/finalizers"]
        verbs: ["update"]

    services:
      metrics:
        port: 8080

    # arguments to be passed to the manager container
    args:
      - manager
      - --metrics-bind-address=127.0.0.1:8080
      - --health-probe-bind-address=:8081
      - --leader-elect

    # how much resource to be used
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi

    # security-context within the container
    securityContext:
      capabilities:
        drop:
        - ALL
      allowPrivilegeEscalation: false

    # probe your container
    probe:
      liveness:
        initialDelaySeconds: 15
        periodSeconds: 20
        httpGet:
          path: /healthz
          port: 8081
      readiness:
        initialDelaySeconds: 5
        periodSeconds: 10
        httpGet:
          path: /readyz
          port: 8081

  webhook:
    replicas: 1

    services:
      managment:
        port: 8080
      master:
        port: 443

    mutation:
      enabled: false

    validation:
      enabled: true
      path: "/validation"
      rules:
        - operations: ["CREATE", "UPDATE"]
          apiGroups: ["apps.mohammadne.me"]
          apiVersions: ["v1alpha1"]
          resources: ["executers"]

    args:
      - webhook
      - --managment-bind-address=:8080
      - --master-bind-address=:443

    tls:
      directory: /tmp/k8s-webhook-server/serving-certs

    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi

    securityContext:
      capabilities:
        drop:
        - ALL
      allowPrivilegeEscalation: false

    probe:
      liveness:
        initialDelaySeconds: 15
        periodSeconds: 20
        httpGet:
          path: /healthz/liveness
          port: 8080
      readiness:
        initialDelaySeconds: 5
        periodSeconds: 10
        httpGet:
          path: /healthz/readiness
          port: 8080

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  serviceAccount:
    annotations: {}

  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    selector: {}

  nodeSelector: {}

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
            - arm64
            - ppc64le
            - s390x
          - key: kubernetes.io/os
            operator: In
            values:
            - linux

  tolerations: []

  config:
    enabled: true
    mountPath: /tmp/sanjagh
    values:
      key: "value"
